##########
##Macros##
##########

#[gcode_macro LOAD_T0]
#gcode:
#  T0
#  LOAD_HOTEND
#  TIP_SHAPE

#[gcode_macro LOAD_T1]
#gcode:
#  T1
#  LOAD_HOTEND
#  TIP_SHAPE

#[gcode_macro LOAD_T2]
#gcode:
#  T2
#  LOAD_HOTEND
#  TIP_SHAPE

#[gcode_macro LOAD_T3]
#gcode:
#  T3
#  LOAD_HOTEND
#  TIP_SHAPE

[gcode_macro apply_offset]
gcode:
  Z_OFFSET_APPLY_PROBE

#[gcode_macro nozzle_offset]
#gcode:
#  G28
#  #Z_TILT_ADJUST
#  #G28 Z
#  G0 X359.4 Y380 Z10
#  PROBE
#  _nozzle_offset

#[gcode_macro _nozzle_offset]
#gcode:
#  {% set MEASURED_OFFSET = printer.probe.last_z_result|float %}
#  {% set CONFIG_OFFSET = printer.configfile.settings.bltouch.z_offset|float %}
#  SET_GCODE_OFFSET Z={CONFIG_OFFSET-(MEASURED_OFFSET+0.3)}
#  Z_OFFSET_APPLY_PROBE

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    #{% set TOOL = params.TOOL|default(0)|int %}
    SET_GCODE_OFFSET Z=0.0 ; reset gcode offset
    #T{TOOL}
    M140 S{BED_TEMP} ; set bed temp
    ;M104 S{EXTRUDER_TEMP-50} ; set initial nozzle temp
    G90 ; use absolute coordinates
    M83 ; extruder relative mode
    G28 ; home all axis
    M190 S{BED_TEMP} ; wait for be temp
    M104 S{EXTRUDER_TEMP} ; set final nozzle temp
    Z_TILT_ADJUST ; z_tilt
    BED_MESH_CALIBRATE ; generate bed_mesh
    G1 X350 Y360 Z10 F6000
    G92 E0
    M109 S{EXTRUDER_TEMP}
    G1 E30 F200
    G1 Z1 X300 Y300 F18000
    G1 Z1 X300 Y10 F18000
    LINE_PURGE 

[gcode_macro START_PRINT_MMU_Bowden]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    {% set TOOL = params.TOOL|default(0)|int %}
    SET_GCODE_OFFSET Z=0.0 ; reset gcode offset
    T{TOOL}
    M140 S{BED_TEMP} ; set bed temp
    M104 S{EXTRUDER_TEMP-50} ; set initial nozzle temp
    G90 ; use absolute coordinates
    M83 ; extruder relative mode
    G28 ; home all axis
    M190 S{BED_TEMP} ; wait for be temp
    M104 S{EXTRUDER_TEMP} ; set final nozzle temp
    Z_TILT_ADJUST ; z_tilt
    BED_MESH_CALIBRATE ; generate bed_mesh
    G1 X350 Y360 Z10 F6000
    G92 E0
    M109 S{EXTRUDER_TEMP}
    G1 E120 F400
    G1 Z0.5 X300 Y300 F18000
    G1 Z0.3 X300 Y10 F18000
    LINE_PURGE 

[gcode_macro END_PRINT]
gcode:
    #{% set MMU = params.MMU|default(false) %}
    # Turn off bed, extruder, and fan
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    G1 Z10 F200
    G28 X Y
    G1 X-5 Y-5
    G90
    PUSHBULLET_COMPLETE
    #{% if MMU == "false" %}
    # TIP_SHAPE
	#{% endif %}
    M140 S0
    M104 S0
    M106 S255
    {% if printer.toolhead.position.z %}
     G1 Z350 F1800
	{% endif %}
    # Disable steppers
    M84
    {% if printer.extruder.temperature > 100 %}
     M106
     M109 S100
	{% endif %}
    M81
    POWER_OFF_PRINTER

[gcode_macro END_PRINT_MMU_Bowden]
gcode:
    {% set MMU = params.MMU|default(false) %}
    # Turn off bed, extruder, and fan
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    G1 Z10 F200
    G28 X Y
    G1 X-5 Y-5
    G90
    PUSHBULLET_COMPLETE
    {% if printer.toolhead.position.z %}
     G0 Z350
	{% endif %}
    {% if MMU == "false" %}
     TIP_SHAPE
	{% endif %}
    M140 S0
    M104 S0
    M106 S255
    # Disable steppers
    M84
    {% if printer.extruder.temperature > 100 %}
     M106
     M109 S100
	{% endif %}
    M81
    POWER_OFF_PRINTER

[gcode_macro TIP_SHAPE]
gcode:
  G1 E5 F6000
  G1 E-15.0000 F6000
  G1 E-6.8250 F5400
  G1 E-1.9500 F2700
  G1 E-0.9750 F1620
  G1 E7.5000 F132
  G1 E-7.5000 F156
  G1 E7.5000 F180
  G1 E-7.5000 F204
  G1 E7.5000 F228
  G1 E-7.5000 F252
  G1 E7.5000 F276
  G1 E-7.5000 F300
  G1 E-112.2500 F2000
  G1 E-1 F3600


[gcode_macro TIP_SHAPE_OLD]
gcode:
  M83
  G1 E15 F600
  G1 E-15 F600
  G1 E-70 F540
  G1 E-20 F270
  G1 E-10 F162
  G1 E10 F65.1
  G1 E-10 F70.2
  G1 E10 F75.3
  G1 E-10 F80.3
  G1 E10 F85.4
  G1 E-10 F90.5
  G1 E10 F95.6
  G1 E-10 F100.6
  G1 E15 F200        

[gcode_macro GET_TOOL]
gcode:
  {% if printer.extruder.motion_queue == 'extruder' %}
    RESPOND MSG="printer.extruder"
  {% elif printer["extruder_stepper extruderB"].motion_queue == 'extruder' %}
    RESPOND MSG="printer[\"extruder_stepper extruderB\"]"
  {% elif printer["extruder_stepper extruderC"].motion_queue == 'extruder' %}
    RESPOND MSG="printer[\"extruder_stepper extruderC\"]"
  {% else %}
    RESPOND MSG="None"
  {% endif %}

#[gcode_macro SET_PRESSURE_ADVANCE]
#rename_existing: _SET_PRESSURE_ADVANCE
#gcode:
#  {% set ADVANCE = params.ADVANCE|default(0)|float %}
#  {% if printer.extruder.motion_queue == 'extruder' %}
#    _SET_PRESSURE_ADVANCE EXTRUDER=extruder ADVANCE={ADVANCE}
#  {% elif printer["extruder_stepper extruderB"].motion_queue == 'extruder' %}
#    _SET_PRESSURE_ADVANCE EXTRUDER=extruderB ADVANCE={ADVANCE}
#  {% elif printer["extruder_stepper extruderC"].motion_queue == 'extruder' %}
#    _SET_PRESSURE_ADVANCE EXTRUDER=extruderC ADVANCE={ADVANCE}
#  {% else %}
#    RESPOND MSG="Error"
#  {% endif %}
  

[gcode_macro M81]
gcode:
  POWER_OFF_PRINTER

[gcode_macro MOTORS_OFF]
gcode:
  M83

[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="printer",
                             state="off")}

[delayed_gcode delayed_printer_off]
initial_duration: 0.
gcode:
    POWER_OFF_PRINTER

[gcode_macro unload_hotend]
gcode:
  M83
  G0 E-50 F1800
  G0 E-50 F1800
  G0 E-50 F1800
  G0 E-50 F1800
  G0 E-50 F1800
  G0 E-50 F1800
  G0 E-50 F1800
  G0 E-50 F1800
  G0 E-50 F1800
  G0 E-50 F1800
  G0 E-50 F1800
  G0 E-50 F1800
  G0 E-50 F1800
  G0 E-50 F1800
  G0 E-50 F1800

[gcode_macro load_hotend]
gcode:
  M83
  G0 E+50 F300
  G0 E+50 F1200
  G0 E+500 F3000
  G0 E+50 F1200
  G0 E+50 F300
  G0 E+50 F150
  G0 E+50 F150
  G0 E+50 F150

[idle_timeout]
gcode:
    M84
    TURN_OFF_HEATERS
    POWER_OFF_PRINTER
timeout: 900

[exclude_object]

[gcode_arcs]
resolution: 0.1

## Use the PAUSE macro direct in your M600:
##  e.g. with a different park position front left and a minimal height of 50 
[gcode_macro M600]
    description: Filament change
gcode: PAUSE X=10 Y=10 Z_MIN=50
  ##Z_MIN will park the toolhead at a minimum of 50 mm above to bed to make it easier for you to swap filament.
##
## Client variable macro for your printer.cfg
[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 360   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 360  ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
# !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract  : False ; use fw_retraction instead of the manual version [True/False]
gcode: